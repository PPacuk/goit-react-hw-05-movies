{"version":3,"file":"static/js/911.11e04605.chunk.js","mappings":"uQACA,EAAkC,gCAAlC,EAA+E,2BAA/E,EAAwH,4BAAxH,EAAiK,2B,SCsEjK,EAhEgB,WACd,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAYJ,EAAaK,IAAI,SAE7BC,EAAa,mCAAG,WAAMC,GAAN,oEACpBA,EAAEC,iBACY,KAAVb,EAFgB,yCAGXc,EAAAA,OAAAA,QAAe,sBAHJ,OAKpBR,EAAgB,CAAEN,MAAOA,IALL,2CAAH,sDA2BnB,OAfAe,EAAAA,EAAAA,YAAU,WACR,GAAKN,EAAL,CAGA,IAAMO,EAAW,mCAAG,8GAEQC,EAAAA,EAAAA,IAAmB,GAAD,OAAIR,IAF9B,OAEVP,EAFU,OAGhBC,EAAaD,GAHG,gDAKhBgB,QAAQC,IAAI,KAAIC,SALA,yDAAH,qDAQjBJ,GATC,CAUF,GAAE,CAACP,KAGF,iBAAKY,UAAWC,EAAhB,WACE,kBAAMD,UAAWC,EAAgBC,SAAUZ,EAA3C,WACE,kBACEU,UAAWC,EACXE,KAAK,OACLC,MAAK,UAAKzB,GACV0B,SA1Ba,SAAAd,GACnBX,EAASW,EAAEe,OAAOF,MACnB,KA0BK,mBAAQD,KAAK,SAAb,SAAsB,eAExB,eAAIH,UAAWC,EAAf,SACGpB,EAAU0B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACb,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAM1B,GAAlC,SACGuB,KAFID,EADI,QAUtB,C,+LC9DDK,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD9B,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBtB,EAAkB,mCAAG,WAAMjB,GAAN,uFACTkC,EAAAA,EAAAA,IAAA,6BACClC,EADD,oBACkBmC,IAFT,cAC1BE,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBC,EAAqB,mCAAG,WAAMX,GAAN,uFACZK,EAAAA,EAAAA,IAAA,gBAAmBL,EAAnB,oBAAiCM,IADrB,cAC7BE,EAD6B,yBAE5BA,EAASC,MAFmB,2CAAH,sDAKrBG,EAAa,mCAAG,WAAMZ,GAAN,uFACJK,EAAAA,EAAAA,IAAA,gBAAmBL,EAAnB,4BAAyCM,IADrC,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbI,EAAgB,mCAAG,WAAMb,GAAN,uFACPK,EAAAA,EAAAA,IAAA,gBAAmBL,EAAnB,4BAAyCM,IADlC,cACxBE,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/Pages/Movies/Movies.module.css?d262","Pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"Movies_moviesContainer__x6Wcs\",\"moviesForm\":\"Movies_moviesForm__qD0jp\",\"moviesInput\":\"Movies_moviesInput__694yl\",\"moviesList\":\"Movies_moviesList__hkkZP\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'services/api';\nimport { Notify } from 'notiflix';\nimport { PropTypes } from 'prop-types';\nimport css from './Movies.module.css';\n\n const Movies = () => {\n  const [query, setQuery] = useState('');\n  const [queryList, setQueryList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  const movieName = searchParams.get('query');\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    if (query === '') {\n      return Notify.failure('Field is empty!!!');\n    }\n    setSearchParams({ query: query });\n  };\n\n  const inputHandler = e => {\n    setQuery(e.target.value);\n  };\n\n  useEffect(() => {\n    if (!movieName) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const queryList = await fetchMoviesByQuery(`${movieName}`);\n        setQueryList(queryList);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    fetchMovies();\n  }, [movieName]);\n\n  return (\n    <div className={css.moviesContainer}>\n      <form className={css.moviesForm} onSubmit={submitHandler}>\n        <input\n          className={css.moviesInput}\n          type=\"text\"\n          value={`${query}`}\n          onChange={inputHandler}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul className={css.moviesList}>\n        {queryList.map(({ id, title }) => (\n          <li key={id}>\n            <Link to={`${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMovies.propTypes = {\n  query: PropTypes.string,\n  queryList: PropTypes.array,\n}\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '10cf95a18950474154f88572c16f5960';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetailsById = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCastById = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchReviewsById = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n"],"names":["useState","query","setQuery","queryList","setQueryList","useSearchParams","searchParams","setSearchParams","location","useLocation","movieName","get","submitHandler","e","preventDefault","Notify","useEffect","fetchMovies","fetchMoviesByQuery","console","log","message","className","css","onSubmit","type","value","onChange","target","map","id","title","to","state","from","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMovieDetailsById","fetchCastById","fetchReviewsById"],"sourceRoot":""}