{"version":3,"file":"static/js/702.16f9421d.chunk.js","mappings":"8PACA,EAAwC,gDAAxC,EAAsG,sCAAtG,EAAsJ,kCAAtJ,EAAqM,qC,SCCxLA,EAAmB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAE/BC,EAMED,EANFC,eACAC,EAKEF,EALFE,aACAC,EAIEH,EAJFG,SACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,YACAC,EACEN,EADFM,OAIIC,EAAWF,EAAW,0CACWA,GAHnB,gBAMdG,EADU,IAAIC,KAAJ,UAAYL,IACJM,cAExB,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAaC,IAAKN,EAAUO,IAAKb,KACjD,gBAAIU,UAAWC,EAAf,WACE,yBACE,0BACGX,EAAe,KAAGO,EAAQ,UAG/B,0BAAI,gBAAcO,KAAKC,MAAqB,GAAfd,GAAmB,QAChD,wBAAI,cACJ,wBAAKC,KACL,wBAAI,YACJ,eAAIQ,UAAWC,EAAf,SACGN,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACV,wBAAcD,GAALC,EADC,WAOrB,E,SCvCD,EAA4B,gCAA5B,EAAwE,gCAAxE,EAAwH,oCCuDxH,EAjDqB,WAAO,IAAD,IACzB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOpB,EAAP,KAAkBqB,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACXC,EAAc,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAc/C,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,8GAEAC,EAAAA,EAAAA,IAAsBT,GAFtB,OAElBtB,EAFkB,OAGxBqB,EAAarB,GAHW,gDAKxBgC,QAAQC,IAAI,KAAIC,SALQ,yDAAH,qDAQzBJ,GACD,GAAE,CAACR,KAGF,iCAEI,SAAC,KAAD,CAAMX,UAAWC,EAAeuB,GAAIT,EAApC,SAAoD,mBAKpD1B,GAAyB,SAACD,EAAD,CAAkBC,UAAWA,KAA1C,SAACoC,EAAA,EAAD,KACd,iBAAKzB,UAAWC,EAAhB,UAA+B,0BAE7B,gBAAID,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMuB,GAAG,OAAOR,MAAO,CAAEC,KAAMJ,GAA/B,SAA2C,YAI7C,yBACE,SAAC,KAAD,CAAMW,GAAG,UAAUR,MAAO,CAAEC,KAAMJ,GAAlC,SAA8C,qBAOpD,SAAC,KAAD,MAGL,C,+LCpDDa,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,oGACVF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD9B,cAC3BE,EAD2B,yBAE1BA,EAASC,KAAKC,SAFY,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACTP,EAAAA,EAAAA,IAAA,6BACCO,EADD,oBACkBN,IAFT,cAC1BE,EAD0B,yBAIzBA,EAASC,KAAKC,SAJW,2CAAH,sDAOlBX,EAAqB,mCAAG,WAAMZ,GAAN,uFACZkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,oBAAiCmB,IADrB,cAC7BE,EAD6B,yBAE5BA,EAASC,MAFmB,2CAAH,sDAKrBI,EAAa,mCAAG,WAAM1B,GAAN,uFACJkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,4BAAyCmB,IADrC,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbK,EAAgB,mCAAG,WAAM3B,GAAN,uFACPkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,4BAAyCmB,IADlC,cACxBE,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDescription/MovieDescription.module.css?8aaf","components/MovieDescription/MovieDescription.jsx","webpack://goit-react-hw-05-movies/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDescription_movieDetailsContainer__Xlfsx\",\"description\":\"MovieDescription_description__Oagse\",\"cardImg\":\"MovieDescription_cardImg__1cZkW\",\"genresList\":\"MovieDescription_genresList__cwYIO\"};","import css from './MovieDescription.module.css';\n\nexport const MovieDescription = ({ movieCard }) => {\n  const {\n    original_title,\n    vote_average,\n    overview,\n    release_date,\n    poster_path,\n    genres,\n  } = movieCard;\n  const imgNotFound = 'img not found'\n\n  const imageUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : imgNotFound;\n  const getDate = new Date(`${release_date}`);\n  const getYear = getDate.getFullYear();\n\n  return (\n    <div className={css.movieDetailsContainer}>\n      <img className={css.cardImg} src={imageUrl} alt={original_title} />\n      <ul className={css.description}>\n        <li>\n          <h2>\n            {original_title} ({getYear})\n          </h2>\n        </li>\n        <li>User Score : {Math.round(vote_average * 10)}%</li>\n        <h3>Overview</h3>\n        <li>{overview}</li>\n        <h4>Genres</h4>\n        <ul className={css.genresList}>\n          {genres.map(({ name, id }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"goBackBtn\":\"MovieDetails_goBackBtn__cyPNe\",\"extraInfo\":\"MovieDetails_extraInfo__QGNY-\",\"extraInfoList\":\"MovieDetails_extraInfoList__AjlyN\"};","import { useEffect, useState } from 'react';\nimport { fetchMovieDetailsById } from 'services/api';\nimport { Outlet, useParams, Link, useLocation } from 'react-router-dom';\nimport { MovieDescription } from 'components/MovieDescription/MovieDescription';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieCard, setMovieCard] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const goBackLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovieDetailsById = async () => {\n      try {\n        const movieCard = await fetchMovieDetailsById(movieId);\n        setMovieCard(movieCard);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    getMovieDetailsById();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <Link className={css.goBackBtn} to={goBackLinkHref}>\n          &larr; Go back\n        </Link>\n      }\n\n      {!movieCard ? <Loader /> : <MovieDescription movieCard={movieCard} />}\n      <div className={css.extraInfo}>\n        Additional information\n        <ul className={css.extraInfoList}>\n          <li>\n            <Link to=\"cast\" state={{ from: location }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: location }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '10cf95a18950474154f88572c16f5960';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetailsById = async id => {\n  const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchCastById = async id => {\n  const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const fetchReviewsById = async id => {\n  const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`);\n  return response.data;\n};\n"],"names":["MovieDescription","movieCard","original_title","vote_average","overview","release_date","poster_path","genres","imageUrl","getYear","Date","getFullYear","className","css","src","alt","Math","round","map","name","id","useState","setMovieCard","movieId","useParams","location","useLocation","goBackLinkHref","state","from","useEffect","getMovieDetailsById","fetchMovieDetailsById","console","log","message","to","Loader","axios","API_KEY","fetchTrendingMovies","response","data","results","fetchMoviesByQuery","query","fetchCastById","fetchReviewsById"],"sourceRoot":""}